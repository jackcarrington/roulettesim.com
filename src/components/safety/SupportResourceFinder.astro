---
import { Icon } from 'astro-icon/components'
import type { SupportResource, ResourceSearchFilters } from '../../types/safety'
import { FALLBACK_CRISIS_RESOURCES } from '../../types/safety'

interface Props {
  initialFilters?: ResourceSearchFilters
  showCrisisFirst?: boolean
  maxResults?: number
  className?: string
}

const { 
  initialFilters = {},
  showCrisisFirst = true,
  maxResults = 10,
  className = ''
} = Astro.props

// For now, we'll use fallback resources with some additional ones
// In a real implementation, this would connect to an API
const allResources: SupportResource[] = [
  ...FALLBACK_CRISIS_RESOURCES,
  {
    id: 'gam-anon',
    name: 'Gam-Anon',
    description: 'Support for family members and friends affected by problem gambling',
    type: 'family',
    contact: {
      website: 'https://www.gam-anon.org',
      phone: '1-718-352-1671'
    },
    availability: 'scheduled',
    languages: ['English'],
    specialties: ['Family Support', 'Coping Strategies', 'Understanding Problem Gambling'],
    cost: 'free',
    verified: true,
    lastUpdated: new Date('2024-01-01')
  },
  {
    id: 'betterhelp-gambling',
    name: 'BetterHelp - Gambling Counselors',
    description: 'Online counseling with licensed therapists specializing in gambling addiction',
    type: 'counseling',
    contact: {
      website: 'https://www.betterhelp.com/gambling-addiction'
    },
    availability: 'by-appointment',
    languages: ['English', 'Spanish', 'French'],
    specialties: ['Individual Therapy', 'CBT', 'Online Sessions'],
    cost: 'insurance',
    verified: true,
    lastUpdated: new Date('2024-01-01')
  }
]

// Sort resources to prioritize crisis resources if requested
const sortedResources = showCrisisFirst 
  ? allResources.sort((a, b) => {
      if (a.type === 'crisis' && b.type !== 'crisis') return -1
      if (b.type === 'crisis' && a.type !== 'crisis') return 1
      return 0
    })
  : allResources

const displayResources = sortedResources.slice(0, maxResults)

// Map resource types to icons and colors
const resourceTypeConfig = {
  crisis: { icon: 'lucide:phone-call', color: '#dc2626', bgColor: '#fef2f2' },
  counseling: { icon: 'lucide:user-check', color: '#2563eb', bgColor: '#eff6ff' },
  family: { icon: 'lucide:heart', color: '#7c2d12', bgColor: '#fef7ed' },
  'support-group': { icon: 'lucide:users', color: '#059669', bgColor: '#f0fdfa' },
  'treatment-program': { icon: 'lucide:building-2', color: '#7c2d12', bgColor: '#fdf2f8' }
}

const availabilityLabels = {
  '24/7': '24/7 Available',
  'business-hours': 'Business Hours',
  'scheduled': 'Scheduled Times',
  'by-appointment': 'By Appointment'
}
---

<div class={`support-resource-finder ${className}`}>
  <div class="finder-header">
    <div class="emergency-notice">
      <Icon name="lucide:alert-circle" class="emergency-icon" />
      <div class="emergency-text">
        <strong>In Crisis? Call 988 or 1-800-522-4700 immediately</strong>
        <p>Both hotlines are available 24/7 for immediate support</p>
      </div>
    </div>
  </div>

  <div class="search-section">
    <h3>Find Professional Support</h3>
    <p>Connect with verified gambling support resources and professional help in your area.</p>
    
    <!-- Search Interface -->
    <div class="search-controls" id="search-interface">
      <div class="search-row">
        <div class="search-field">
          <label for="location-input">Your Location (optional)</label>
          <input 
            type="text" 
            id="location-input" 
            placeholder="City, State or ZIP code"
            class="search-input"
          />
        </div>
        
        <div class="search-field">
          <label for="resource-type">Type of Support</label>
          <select id="resource-type" class="search-select">
            <option value="">All Types</option>
            <option value="crisis">Crisis Support</option>
            <option value="counseling">Professional Counseling</option>
            <option value="support-group">Support Groups</option>
            <option value="family">Family Support</option>
            <option value="treatment-program">Treatment Programs</option>
          </select>
        </div>
      </div>
      
      <div class="search-actions">
        <button type="button" class="button search-button" data-action="find-resources">
          <Icon name="lucide:search" />
          Find Support Resources
        </button>
        <button type="button" class="button color-secondary" data-action="enable-geolocation">
          <Icon name="lucide:map-pin" />
          Use My Location
        </button>
      </div>
    </div>
  </div>

  <div class="resources-section">
    <div class="results-header">
      <h4>Available Support Resources</h4>
      <div class="results-info">
        <Icon name="lucide:shield-check" />
        <span>All resources verified and updated regularly</span>
      </div>
    </div>

    <div class="resources-grid">
      {displayResources.map((resource) => {
        const config = resourceTypeConfig[resource.type];
        return (
          <article class={`resource-card type-${resource.type}`} data-resource-type={resource.type}>
            <div class="resource-header">
              <div class="resource-icon">
                <Icon name={config.icon} />
              </div>
              
              <div class="resource-meta">
                <h5 class="resource-name">{resource.name}</h5>
                <div class="resource-type-badge">
                  {resource.type.replace('-', ' ')}
                </div>
              </div>
              
              <div class="resource-availability">
                <Icon name="lucide:clock" />
                <span>{availabilityLabels[resource.availability]}</span>
              </div>
            </div>

            <p class="resource-description">{resource.description}</p>

            <div class="resource-details">
              <div class="specialties">
                <strong>Specializes in:</strong>
                <ul>
                  {resource.specialties.slice(0, 3).map(specialty => (
                    <li>{specialty}</li>
                  ))}
                </ul>
              </div>

              <div class="languages">
                <Icon name="lucide:globe" />
                <span>{resource.languages.join(', ')}</span>
              </div>

              <div class="cost-info">
                <Icon name="lucide:credit-card" />
                <span class={`cost-${resource.cost}`}>
                  {resource.cost === 'free' ? 'Free Service' : 
                   resource.cost === 'insurance' ? 'Insurance Accepted' :
                   resource.cost === 'sliding-scale' ? 'Sliding Scale Fees' : 'Fee for Service'}
                </span>
              </div>
            </div>

            <div class="resource-actions">
              {resource.contact.phone && (
                <a 
                  href={`tel:${resource.contact.phone}`}
                  class="button contact-button phone-button"
                  aria-label={`Call ${resource.name} at ${resource.contact.phone}`}
                >
                  <Icon name="lucide:phone" />
                  {resource.contact.phone}
                </a>
              )}
              
              {resource.contact.website && (
                <a 
                  href={resource.contact.website}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="button color-secondary contact-button"
                  aria-label={`Visit ${resource.name} website (opens in new tab)`}
                >
                  <Icon name="lucide:external-link" />
                  Visit Website
                </a>
              )}

              {resource.contact.email && (
                <a 
                  href={`mailto:${resource.contact.email}`}
                  class="button color-secondary contact-button"
                  aria-label={`Email ${resource.name}`}
                >
                  <Icon name="lucide:mail" />
                  Email
                </a>
              )}
            </div>
          </article>
        )
      })}
    </div>

    <!-- Fallback Notice -->
    <div class="fallback-notice">
      <Icon name="lucide:info" />
      <div>
        <p><strong>Can't find local resources?</strong> The resources above are available nationwide. 
        For location-specific help, try calling the National Problem Gambling Helpline at 
        <a href="tel:1-800-522-4700">1-800-522-4700</a>.</p>
      </div>
    </div>
  </div>

  <div class="crisis-banner">
    <div class="crisis-content">
      <Icon name="lucide:alert-triangle" class="crisis-warning" />
      <div class="crisis-message">
        <strong>Need immediate help? Don't wait.</strong>
        <p>If you're having thoughts of self-harm or are in crisis, call 988 (Suicide & Crisis Lifeline) or go to your nearest emergency room.</p>
      </div>
    </div>
  </div>
</div>

<!-- CSP-compliant external script for this component's behavior -->
<script type="module" src="/scripts/support-resource-finder.js"></script>

<style lang="scss">
  .support-resource-finder {
    max-width: 1000px;
    margin: 0 auto;
  }

  .finder-header {
    margin-bottom: var(--space-xl);
  }

  .emergency-notice {
    display: flex;
    align-items: center;
    gap: var(--space-m);
    background: #fef2f2;
    border: 2px solid #fca5a5;
    border-radius: var(--radius-m);
    padding: var(--space-l);
    color: #991b1b;

    .emergency-icon {
      width: 2rem;
      height: 2rem;
      flex-shrink: 0;
      color: #dc2626;
    }

    .emergency-text {
      flex: 1;

      strong {
        display: block;
        font-size: var(--font-size-1);
        margin-bottom: var(--space-xs);
      }

      p {
        margin: 0;
        font-size: var(--font-size-0);
      }
    }
  }

  .search-section {
    background: var(--color-neutral-200);
    border-radius: var(--radius-l);
    padding: var(--space-xl);
    margin-bottom: var(--space-xl);

    h3 {
      font-size: var(--font-size-2);
      color: var(--foreground-color);
      margin-bottom: var(--space-s);
    }

    p {
      color: var(--color-neutral-700);
      margin-bottom: var(--space-l);
    }
  }

  .search-controls {
    .search-row {
      display: grid;
      grid-template-columns: 2fr 1fr;
      gap: var(--space-l);
      margin-bottom: var(--space-l);

      @media (max-width: 768px) {
        grid-template-columns: 1fr;
      }
    }

    .search-field {
      display: flex;
      flex-direction: column;
      gap: var(--space-xs);

      label {
        font-weight: 600;
        color: var(--foreground-color);
        font-size: var(--font-size--1);
      }
    }

    .search-input,
    .search-select {
      padding: var(--space-s);
      border: 2px solid var(--border-color-subtle);
      border-radius: var(--radius-s);
      background: var(--background-color);
      color: var(--foreground-color);
      font-size: var(--font-size-0);

      &:focus {
        outline: none;
        border-color: var(--color-primary-400);
        box-shadow: 0 0 0 3px var(--color-primary-100);
      }
    }

    .search-actions {
      display: flex;
      gap: var(--space-m);
      
      @media (max-width: 768px) {
        flex-direction: column;
      }

      .button {
        display: inline-flex;
        align-items: center;
        gap: var(--space-xs);

        svg {
          width: 1rem;
          height: 1rem;
        }
      }
    }
  }

  .resources-section {
    margin-bottom: var(--space-xl);
  }

  .results-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-l);
    padding-bottom: var(--space-m);
    border-bottom: 2px solid var(--border-color-subtle);

    @media (max-width: 768px) {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-s);
    }

    h4 {
      font-size: var(--font-size-2);
      color: var(--foreground-color);
      margin: 0;
    }

    .results-info {
      display: flex;
      align-items: center;
      gap: var(--space-xs);
      color: var(--color-neutral-600);
      font-size: var(--font-size--1);

      svg {
        width: 1rem;
        height: 1rem;
        color: var(--color-primary-500);
      }
    }
  }

  .resources-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: var(--space-l);
    margin-bottom: var(--space-xl);

    @media (max-width: 768px) {
      grid-template-columns: 1fr;
    }
  }

  .resource-card {
    background: var(--background-color);
    border: 2px solid var(--border-color-subtle);
    border-radius: var(--radius-m);
    padding: var(--space-l);
    transition: all var(--animation-speed-fast) var(--cubic-bezier);

    &:hover {
      border-color: var(--color-primary-300);
      transform: translateY(-2px);
      box-shadow: var(--elevation-2);
    }

    .resource-header {
      display: flex;
      align-items: flex-start;
      gap: var(--space-m);
      margin-bottom: var(--space-m);

      .resource-icon {
        width: 3rem;
        height: 3rem;
        border-radius: var(--radius-m);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;

        svg {
          width: 1.5rem;
          height: 1.5rem;
        }
      }

      .resource-meta {
        flex: 1;
        min-width: 0;

        .resource-name {
          font-size: var(--font-size-1);
          color: var(--foreground-color);
          margin: 0 0 var(--space-xs) 0;
          line-height: 1.3;
        }

        .resource-type-badge {
          font-size: var(--font-size--2);
          font-weight: 600;
          text-transform: capitalize;
          padding: var(--space-5xs) var(--space-xs);
          border-radius: var(--radius-s);
          display: inline-block;
        }
      }

      .resource-availability {
        display: flex;
        align-items: center;
        gap: var(--space-xs);
        color: var(--color-neutral-600);
        font-size: var(--font-size--1);
        flex-shrink: 0;

        svg {
          width: 1rem;
          height: 1rem;
        }
      }
    }

    .resource-description {
      color: var(--color-neutral-700);
      line-height: 1.6;
      margin-bottom: var(--space-m);
    }

    .resource-details {
      margin-bottom: var(--space-l);

      .specialties {
        margin-bottom: var(--space-m);

        strong {
          display: block;
          color: var(--foreground-color);
          font-size: var(--font-size--1);
          margin-bottom: var(--space-xs);
        }

        ul {
          list-style: none;
          padding: 0;
          margin: 0;
          display: flex;
          flex-wrap: wrap;
          gap: var(--space-xs);

          li {
            background: var(--color-neutral-300);
            color: var(--color-neutral-700);
            padding: var(--space-5xs) var(--space-xs);
            border-radius: var(--radius-s);
            font-size: var(--font-size--2);
          }
        }
      }

      .languages,
      .cost-info {
        display: flex;
        align-items: center;
        gap: var(--space-xs);
        margin-bottom: var(--space-s);
        color: var(--color-neutral-600);
        font-size: var(--font-size--1);

        svg {
          width: 1rem;
          height: 1rem;
        }
      }

      .cost-free { color: var(--color-primary-600); }
      .cost-insurance { color: var(--color-secondary-600); }
      .cost-sliding-scale { color: var(--color-neutral-600); }
      .cost-fee-for-service { color: var(--color-neutral-600); }
    }

    .resource-actions {
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-s);

      .contact-button {
        display: inline-flex;
        align-items: center;
        gap: var(--space-xs);
        font-size: var(--font-size--1);
        padding: var(--space-xs) var(--space-s);

        svg {
          width: 0.875rem;
          height: 0.875rem;
        }

        &.phone-button {
          background: var(--color-primary-500);
          border-color: var(--color-primary-500);
          color: white;

          &:hover {
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
          }
        }
      }
    }
  }

  .fallback-notice {
    display: flex;
    align-items: flex-start;
    gap: var(--space-m);
    background: var(--color-secondary-100);
    border: 2px solid var(--color-secondary-300);
    border-radius: var(--radius-m);
    padding: var(--space-l);
    color: var(--color-secondary-800);

    svg {
      width: 1.5rem;
      height: 1.5rem;
      flex-shrink: 0;
      margin-top: var(--space-5xs);
    }

    p {
      margin: 0;
      line-height: 1.6;

      a {
        color: var(--color-secondary-700);
        font-weight: 600;
        text-decoration: underline;

        &:hover {
          color: var(--color-secondary-600);
        }
      }
    }
  }

  .crisis-banner {
    background: linear-gradient(135deg, #dc2626, #b91c1c);
    border-radius: var(--radius-l);
    padding: var(--space-l);
    color: white;

    .crisis-content {
      display: flex;
      align-items: center;
      gap: var(--space-m);

      @media (max-width: 768px) {
        flex-direction: column;
        text-align: center;
        gap: var(--space-s);
      }

      .crisis-warning {
        width: 2.5rem;
        height: 2.5rem;
        flex-shrink: 0;
      }

      .crisis-message {
        flex: 1;

        strong {
          display: block;
          font-size: var(--font-size-1);
          margin-bottom: var(--space-xs);
        }

        p {
          margin: 0;
          opacity: 0.9;
        }
      }
    }
  }

  // Dark mode adjustments
  .darkmode {
    .emergency-notice {
      background: #450a0a;
      border-color: #dc2626;
      color: #fecaca;
    }

    .search-section {
      background: var(--color-neutral-800);
    }

    .resource-card {
      background: var(--color-neutral-800);
      border-color: var(--color-neutral-700);

      &:hover {
        border-color: var(--color-primary-400);
      }
    }

    .fallback-notice {
      background: var(--color-secondary-900);
      border-color: var(--color-secondary-600);
      color: var(--color-secondary-200);
    }
  }
</style>